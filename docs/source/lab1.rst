Л.р №1 Построение информационно-логической и функциональной моделей системы
============================================================================


Цель работы: получить навыки функционального описания процессов с помощью формальных методов с графической нотацией.


Методические указания
----------------------


В данной работе рассматриваются типовые методы построения функцио-нальных моделей, используемые в функционально-ориентированных методоло-гиях проектирования информационных систем (ИС). Достоинством функцио-нально-ориентированных методологий является реализация структурного подхода к проектированию ИС «сверху-вниз», когда каждый функциональный блок может быть декомпозирован на множество подфункций и т.д. Для таких моделей ха-рактерна строгость декомпозиции и наглядность графического представления. Проектирование при использовании функционально-ориентированной методо-логии начинается с построения функциональных моделей (схем).
В функциональной модели главными структурными компонентами явля-ются функции (операции, работы, действия), которые связываются между собой потоками информационных и материальных объектов.


IDEF0
______


IDEF0 (Integrated DEFinition) — это метод описания системы в целом как множества взаимозависимых функций (действий).
Функции системы исследуются независимо от объектов, обеспечивающих их выполнения. Такая сугубо «функциональная» точка зрения позволяет четко отделить аспекты назначения системы от вопросов ее реализации.
IDEF0 часто используется как способ исследования и проектирования си-стем на логическом уровне. Результаты анализа с помощью IDEF0 могут приме-няться при проектировании с использованием DFD (Л.р №2).


_______________________________________




Нотация IDEF0
______________

IDEF0 содержит очень небольшую по объему графическую нотацию в со-четании с четкими правилами и рекомендациями по построению качественной и понятной схемы системы.
IDEF0 определяет два графических объекта:

1.	Блок, с помощью которого обозначается некоторая функция (действие);
2.	Стрелка, с помощью которой указываются информационные или ма-териальные объекты.

Функция обрабатывает входные объекты и преобразует их в выходные. Функциональный блок обозначается так:

.. figure:: _static/Pictures/Лр1/р1.jpg
    :scale: 80%
    :align: center




«Формирование отчета» — наименование функции, «1» — номер функции. Наименование функции должно характеризовать процесс и состоять из глагола или отглагольного существительного с дополнением. Наименование должно со-ответствовать выбранной точки зрения моделирования. Для функционального блока обязательно должно быть указано наименование.

Описание любого функционального блока должно как минимум включать описание объектов, которые создаются в результате выполнения функции («вы-ход»), и объектов, воздействующих на способ преобразования входа в выход (управляющих объектов, управления). Также практически всегда описываются объекты, преобразуемые или потребляемые при выполнении функции, т.е. «вход».

На IDEF0-диаграммах с помощью стрелок можно показывать до четырех типов объектов:

1.  Вход (Input, I);

2.  Управление, или контроль (Control, C);

3.  Выход (Output, O);

4.  Исполняющий механизм (Mechanism, M) — то, что используется для собственно выполнения процесса, но остается неизменным (либо изменения не-значимы и являются побочным результатом).

Каждый тип жестко привязан к определенной стороне функционального блока, что, собственно, и обеспечивает возможность различения стрелок разных типов.


.. figure:: _static/Pictures/Лр1/р2.jpg
    :scale: 80%
    :align: center


Одновременно могут использоваться произвольное количество стрелок любого типа.

Как и для функций, стрелкам должны быть присвоены наименования. Иначе возникает существенная возможность неправильного истолкования сути диа-граммы. Для наименования стрелок обычно используются имена существитель-ные, поскольку стрелки обозначают объекты.


_______________________________________



Описание стрелок
_________________

Стрелки входа. Вход — это информация или сырье, потребляемое или преобразуемое функциональным блоком для производства выхода. Стрелки входа всегда направлены в левую сторону прямоугольника функционального блока. Наличие у некоторого блока входных стрелок не является обязательным, т.к. возможно, что некоторые блоки ничего явным образом не изменяют и не преоб-разуют.

Стрелки управления. Определяют, чем регулируется выполнение функции. Стрелки управления всегда входят в функциональный блок сверху. Управление контролирует поведение функционального блока для обеспечения получения желаемого выхода. Поэтому каждый блок должен иметь как минимум одну стрелку управления. Управление обычно представляет собой правила, ин-струкции, стандарты и т.п. Управление можно рассматривать как специфический вид входа.

Стрелки выхода. Выход — информация или продукция, получаемая в результате выполнения функционального блока. Каждый блок должен иметь как минимум одну стрелку выхода. Важно, чтобы наименования входных и вы-ходных стрелок различались. Например, если блок «Проверить оформление до-кументов» имеет вход «Документы», то выходную стрелку можно обозначить как «Проверенные документы» (или: «Правильно оформленные документы», «Не-правильно оформленные документы»).

Стрелки механизма исполнения. Механизм — это объект, с помощью которого и посредством которого непосредственно выполняется моделируемое действие. Пример механизма исполнения: персонал, оборудование. Стрелки ме-ханизма исполнения часто могут не указываться, если их отображение не спо-собствует достижению цели моделирования.


_______________________________________



Соединение блоков
_________________

В IDEF0 существует 5 основных типов соединения функциональных блоков.

1.  Выход-вход.
Комбинированная стрелка (соединение) выход-вход применяется, когда один блок должен полностью завершить работу перед началом работы второго.

.. figure:: _static/Pictures/Лр1/р3.jpg
    :scale: 80%
    :align: center



2.  Выход-управление.
Используется, когда один блок управляет работой другого, или, иначе, один блок преобладает над другим.

.. figure:: _static/Pictures/Лр1/р4.jpg
    :scale: 80%
    :align: center


3.  Выход-механизм исполнения.
Используется редко и отражает ситуацию, когда выход одного блока явля-ется инструментом, обеспечивающим выполнение другого.

.. figure:: _static/Pictures/Лр1/р5.jpg
    :scale: 80%
    :align: center


4.  Выход-обратная связь на вход.
Обычно используется для описания циклов повторной обработки чего-либо.

.. figure:: _static/Pictures/Лр1/р6.jpg
    :scale: 80%
    :align: center


5.  Выход-обратная связь на управление.
Используется для описания обратной связи между управляемым и управ-ляющим блоком.

.. figure:: _static/Pictures/Лр1/р7.jpg
    :scale: 80%
    :align: center

_______________________________________



Соединение и разъединение стрелок
_________________________________


Возможно соединение и разъединение стрелок на диаграмме. Разъеди-ненные стрелки могут иметь наименования, отличные от наименования исходной. Обычно разъединение применяется для отражения факта использования только части информации или сырья, помеченного исходной стрелкой. Аналогично об-стоит дело с объединением стрелок. В узлах разъединения и объединения стрелки скругляются, т.е. они не образуют прямых углов.

.. figure:: _static/Pictures/Лр1/р8.jpg
    :scale: 80%
    :align: center



_____________________________________



Построение моделей IDEF0
_________________________


Модель IDEF0 представляет собой набор взаимоувязанных диаграмм. Каждая диаграмма является описанием системы или ее отдельных функцио-нальных блоков в рамках некоторого уровня детализации.

Контекстная диаграмма — диаграмма самого верхнего уровня иерархии, дает самое общее представление о системе. На контекстной диаграмме (КД) отображается только один функциональный блок (контекстная функция).

Далее контекстная функция декомпозируется на основные функции си-стемы с помощью отдельной диаграммы. В свою очередь, каждая такая функция может быть разложена на более мелкие. И т.д. При построении модели нужно соотнести каждый функциональный блок более низкого уровня с функциональ-ным блоком более высокого уровня. 

Следует всегда помнить, что некоторый функциональный блок и диаграмма его декомпозиции суть одно и то же, но рассматриваемое с разной степенью де-тализации. Отсюда следует, что все стрелки, связанные с рассматриваемым функциональным блоком, должны присутствовать на декомпозирующей его диаграмме (если таковая имеется). Исключения из этого правила взаимоувязы-вания стрелок возможно только в случае использования механизма туннелиро-вания, рассматриваемого ниже.


______________________________



Пример использования IDEF0
____________________________


Цель: показать основные складские операции и их взаимосвязь.

Точка зрения: работник склада.


.. figure:: _static/Pictures/Лр1/р9.jpg
    :scale: 80%
    :align: center

.. figure:: _static/Pictures/Лр1/р10.jpg
    :scale: 80%
    :align: center


Порядок построения модели:

1.  Определение цели моделирования.

2.  Определение точки зрения (непосредственный исполнитель процесса, управленец, внешний аналитик и т.п.).

Модель должна разрабатываться исходя из единственной и заранее опре-деленной точки зрения. Это обеспечивает внутреннюю целостность и в значи-тельной степени предотвращает постоянное изменение структуры. 

Определение цели моделирования и точки зрения позволяют выявить гра-ницы моделирования: ширину и глубину охвата.

Часто строится целый набор моделей для разных точек зрения.


Общие рекомендации по построению модели:

1.  На каждом уровне представлять не более 3-6 функциональных блоков.

2.  Не загромождать диаграмму несущественными на текущем уровне функциями и объектами.

3.  Одновременно вести декомпозицию функций и объектов.

4.  При определении связанных блоком стрелок сначала стараться описать стрелки выходов и управления, поскольку их наличие обязательно. Если не ясно, относить ли стрелку к входу или управлению, то следует выбирать последнее. Следует помнить, что управление можно рассматривать как особый вид входа.

5.  Следует выбирать ясные и полные наименования элементов.

Нумерация блоков и диаграмм. Все блоки нумеруются. Номер имеет вид <префикс><цифра>. Префикс представляет совокупность некоторой строки (обычно символ “A”) и номера родительского блока. Для блоков первого уровня детализации номер родительского не указывается. Контекстная функция обо-значается как A0, декомпозирующие ее блоки — A1, A2, A3,... Далее, блок A1 может декомпозироваться на A1.1, A1.2,...; A1.1 — на A1.1.1, A1.1.2,... Точки обычно не ставятся, поскольку на грамотно построенной диаграмме не бывает больше 6-7 блоков. Т.е.: A0, A1, A11, A111,...

_______________



Туннелирование
_______________

Если необходимо нарушить правило взаимоувязывания стрелок на роди-тельской диаграмме и диаграмме декомпозиции, то следует воспользоваться ме-ханизмом туннелирования. Туннели позволяют избавиться от загромождения родительских диаграмм стрелками, несущественными для их уровня. Аналогично, при построении диаграмм декомпозиции иногда неудобна необходимость изоб-ражения некоторых стрелок, связанных с декомпозируемой функцией.

Туннель обозначается с помощью скобок у начала или конца стрелки. Если скобки ставятся у конца стрелки (т.е. около блока), то это значит, что данная стрелка не показывается на диаграмме декомпозиции. 


.. figure:: _static/Pictures/Лр1/р11.jpg
    :scale: 80%
    :align: center








































